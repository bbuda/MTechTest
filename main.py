
import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from scipy import stats
# Заголовок приложения
st.title("Тестирование гипотез для компании")

# Загрузка файла
uploaded_file = st.file_uploader("Загрузите CSV файл, пожалуйста, убедитесь, что он соотвествут формату данных, который давался вместе с тестовым заанием", type="csv")
if uploaded_file is not None:
    # Чтение данных из загруженного файла
    data = pd.read_csv(uploaded_file, encoding='cp1251', sep=',')

    # Преобразование данных
    data['Кол-во больничных дней'] = data['Количество больничных дней,"Возраст","Пол"'].str.split(',', expand=True)[0]
    data['Возраст'] = data['Количество больничных дней,"Возраст","Пол"'].str.split(',', expand=True)[1]
    data['Пол'] = data['Количество больничных дней,"Возраст","Пол"'].str.split(',', expand=True)[2]
    data.drop(columns=['Количество больничных дней,"Возраст","Пол"'], inplace=True)

    # Преобразование типов данных
    data['Возраст'] = data['Возраст'].astype(int)
    data['Кол-во больничных дней'] = data['Кол-во больничных дней'].astype(int)
    data['Пол'] = data['Пол'].astype(str)

    # Отображение преобразованных данных
    st.write("Преобразованные данные:")
    st.dataframe(data)

    st.write("Информация о данных:")
    st.write(data.info())

    # Подсчет и отображение пропущенных значений
    st.write("Пропущенные значения:")
    st.write(data.isna().sum())

    # Визуализация распределения по полу
    st.write("Визуализация данных генеральной совокупности")
    labels = ['Мужчины', 'Женщины']
    count_male = data[data['Пол'] == '"М"'].count()[0]
    count_female = data[data['Пол'] == '"Ж"'].count()[0]
    sizes = [count_male, count_female]

    fig, ax = plt.subplots()
    ax.pie(sizes, labels=labels, autopct='%1.1f%%', startangle=90, colors=['skyblue', 'lightsalmon'])
    ax.axis('equal')
    plt.title('Распределение работников по полу')
    st.pyplot(fig)

    # Создание графиков плотности распределения
    data_for_male = data[data['Пол'] == '"М"']['Кол-во больничных дней']
    data_for_female = data[data['Пол'] == '"Ж"']['Кол-во больничных дней']
    plt.figure(figsize=(13, 7))
    # Создание сетки 1x2 подграфиков
    ax1 = plt.subplot(1, 2, 1)
    sns.kdeplot(data_for_male, color='blue', fill=True)
    plt.title('Плотность распределения больничных дней у мужчин', fontsize=14)
    plt.ylabel('Плотность распределения', fontsize=14)
    plt.xlabel('Кол-во больничных дней', fontsize=14)
    ax2 = plt.subplot(1, 2, 2)
    sns.kdeplot(data_for_female, color='lightsalmon', fill=True)
    plt.title('Плотность распределения больничных дней у женщин', fontsize=14)
    plt.ylabel('', fontsize=14)
    plt.xlabel('Кол-во больничных дней', fontsize=14)
    plt.tight_layout()

    st.pyplot(plt)

    # Удаление созданных графиков из памяти
    plt.close(fig)
    plt.close('all')

    work_days = st.number_input("Введите число рабочих дней (work_days) для проверки гипотез",
                                min_value=0, value=2)
    age = st.number_input("Введите число лет (age) для проверки гипотезы",
                                min_value=0, value=18)

    # Вывод текста о проверке гипотезы
    st.write("Проверка 1-ой гипотезы:")
    st.write(f"""
        "Мужчины пропускают в течение года более {work_days} рабочих дней (work_days) по болезни значимо чаще женщин"
        Формулировка гипотез:
        Нулевая гипотеза (H0): Среднее количество больничных дней в году среди мужчин, которые пропускают более {work_days} дней, равно среднему количеству больничных дней среди женщин, которые пропускают более 2 дней.
        Альтернативная гипотеза (H1): Среднее количество больничных дней в году среди мужчин, которые пропускают более {work_days} дней, больше, чем среднее количество больничных дней среди женщин, которые пропускают более 2 дней.
        Сформулируем гипотезы на языке статистики:
        H₀: μₘ = μₓ
        H₁: μₘ > μₓ
        где μₘ - среднее количество больничных дней для выборки с мужчинами, μₓ - среднее количество больничных дней для выборки с женщинами.
        Важно! для каждой выборки берутся только те данные, где количество больничных дней > {work_days}
        """)
    date_for_male = data[data['Пол'] == '"М"']['Кол-во больничных дней']
    date_for_female = data[data['Пол'] == '"Ж"']['Кол-во больничных дней']
    data_men_filtered = date_for_male[date_for_male > work_days]
    data_women_filtered = date_for_female[date_for_female > work_days]
    st.write("Описательные статистики представленных выборок:")
    st.write(data_men_filtered.describe())
    st.write(data_women_filtered.describe())
    st.write(f"""Выбор уровня значимости и статистического критерия
                Уровень значимости (α) установим равным 0.05, это означает ,что есть 5% вероятность отклонения нулевой гипотезы, 
                когда она на самом деле верна. 0.05 Общепринятное значние, уровень значимости можно уменьшить, но 
                тогда будет расти вероятность принять нулевую гипотезу, когда на самом деле она неверна. 
                В нашей ситуации нет острой надобности уменьшать вероятность непринятие нулевой гипотезы, 
                когда она самом деле верна, в пользу увеличения вероятности принятия неверной нулевой гипотезы
                Статистический критерий:
                Для этой гипотезы будем использовать двухвыборочный t-критерий Стьюдента. 
                Этот критерий позволяет сравнить средние значения для двух независимых выборок. 
                В наших гипотезах сраниваются средние количества больничных дней отдельно среди мужчин и отдельно среди женщин, 
                которые пропускали более двух дней. Поэтому уместно использовать этот критерий
                Для использования двухвыборочного t-критерия Стьюдента, обязательно должны выполняться следующий условия:
                * Данные в выборках не должны зависеть друг от друга
                * Дисперсии каждой выборки должны быть равны
                * Данные в каждой выборки должны быть нормально распределены
                Первое условие выполняется данные данные в каждой из выборок независимы друг от друга (в одной выборке отдельно мужчины, в другой отдельно женщины).
                Проверим оставшиеся два условия для применения t критерия Стьюдента
                Проверка на нормальность. Для проверки нормальности распределения данных можно использовать тест Шапиро-Уилка.
                Нулевая гипотеза (H0): данные распределенны нормально
                Альтернативная гипотеза (H1): данные распределенны не нормально
                Уровень значимости (α) установим равным 0.05
            """)
    normality_test_men, p_value_male = stats.shapiro(data_men_filtered)
    normality_test_women, p_value_female = stats.shapiro(data_women_filtered)

    alpha = 0.05
    if p_value_male > alpha:
        st.write("Нулевая гипотеза о нормальности распределения данных для выборки из мужчин не может быть отвергнута")
    else:
        st.write("Нулевая гипотеза отвергается, данные из выборки из мужчин распределенны не нормально")
    if p_value_female > alpha:
        st.write("Нулевая гипотеза о нормальности распределения данных для выборки из женщин не может быть отвергнута")
    else:
        st.write("Нулевая гипотеза отвергается, данные из выборки из женщин распределенны не нормально")

    plt.figure(figsize=(12, 6))

    plt.subplot(1, 2, 1)
    sns.histplot(data_men_filtered, kde=True, color='blue', stat='density')
    plt.title('Распределение данных для мужчин')
    plt.ylabel('Плотность распределения')
    plt.subplot(1, 2, 2)
    sns.histplot(data_women_filtered, kde=True, color='lightsalmon', stat='density')
    plt.title('Распределение данных для женщин')

    plt.tight_layout()
    plt.show()
    st.pyplot(plt)
    st.pyplot(plt)
    plt.close(fig)
    plt.close('all')

    st.write("Проведем тест Манна-Уитни")
    mann_whitney_test_result, p_value = stats.mannwhitneyu(data_men_filtered, data_women_filtered,
                                                           alternative='greater')
    st.write(f'Значение p_value: {p_value}')
    if p_value < alpha:
        st.write("Отвергаем нулевую гипотезу, p_value < 0.05")
        st.write(f"""p_value ~ {p_value} меньше установленного ранее уровня значимости (0.05).
                        Есть достаточные основание отвергнуть нулевую гипотезу, статистическая разница между двумя средними есть
                        Вывод: На основе проведенного анализа, мы находим статистически значимые доказательста того, что мужчины пропускают 
                        более {work_days} рабочих дней по болезни в течение года значимо чаще, чем женщины,
                        которые пропускают более {work_days} рабочих дней по болезни
                        На уровне значимости: 0.05 принимаем альтренативную гипотезу H1: μₘ > μₓ
                        """)
    else:
        st.write("Не отвергаем нулевую гипотезу, p_value > 0.05")
        st.write(f"""p_value ~ {p_value} значительно больше установленного ранее уровня значимости (0.05).
                Значит нет достаточных оснований отвергнуть нулевую гипотезу, статистической разницы между двумя средними нет
                Вывод: На основе проведенного анализа, мы не находим статистически значимых доказательств того, 
                что мужчины пропускают более {work_days} рабочих дней по болезни в течение года значимо чаще, чем женщины, 
                которые пропускают более {work_days} рабочих дней по болезни
                На уровне значимости: 0.05 нулевую гипотезу H₀: μₘ = μₓ принимаем
                """)





